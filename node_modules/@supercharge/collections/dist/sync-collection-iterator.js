'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.SyncCollectionIterator = void 0;
class SyncCollectionIterator {
    /**
     * Create a new iterator for the given `items`.
     *
     * @param items
     */
    constructor(items) {
        /**
         * The next item’s index.
         */
        this.pointer = 0;
        this.items = items;
    }
    /**
     * Returns an iterator instance for the given `items`.
     *
     * @param {T[]} items
     *
     * @returns {SyncCollectionIterator<T>}
     */
    static for(items) {
        return new this(items);
    }
    /**
     * Returns iteself to allow reusing iterators when exiting a loop early (via break, return, etc.).
     *
     * @returns {IterableIterator}
     */
    [Symbol.iterator]() {
        return this;
    }
    /**
     * Returns the iterator result containing the next item if there’s
     * one available. Returns `undefined` if all items are iterated.
     *
     * @returns {IteratorResult}
     */
    next() {
        return this.pointer < this.items.length
            ? { done: false, value: this.items[this.pointer++] }
            : { done: true, value: undefined };
    }
}
exports.SyncCollectionIterator = SyncCollectionIterator;
